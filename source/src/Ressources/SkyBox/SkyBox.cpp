#include "Ressources/SkyBox/SkyBox.h"

float SkyBox::CUBEMAPSIZE = 1000.f;



void SkyBox::operator=(const SkyBox& skybox)
{

    cubemap = skybox.cubemap;
}

void SkyBox::Init()
{
    
    float skyboxVertices[] = {
        // positions          
        -CUBEMAPSIZE,  CUBEMAPSIZE, -CUBEMAPSIZE,
        -CUBEMAPSIZE, -CUBEMAPSIZE, -CUBEMAPSIZE,
         CUBEMAPSIZE, -CUBEMAPSIZE, -CUBEMAPSIZE,
         CUBEMAPSIZE, -CUBEMAPSIZE, -CUBEMAPSIZE,
         CUBEMAPSIZE,  CUBEMAPSIZE, -CUBEMAPSIZE,
        -CUBEMAPSIZE,  CUBEMAPSIZE, -CUBEMAPSIZE,

        -CUBEMAPSIZE, -CUBEMAPSIZE,  CUBEMAPSIZE,
        -CUBEMAPSIZE, -CUBEMAPSIZE, -CUBEMAPSIZE,
        -CUBEMAPSIZE,  CUBEMAPSIZE, -CUBEMAPSIZE,
        -CUBEMAPSIZE,  CUBEMAPSIZE, -CUBEMAPSIZE,
        -CUBEMAPSIZE,  CUBEMAPSIZE,  CUBEMAPSIZE,
        -CUBEMAPSIZE, -CUBEMAPSIZE,  CUBEMAPSIZE,

         CUBEMAPSIZE, -CUBEMAPSIZE, -CUBEMAPSIZE,
         CUBEMAPSIZE, -CUBEMAPSIZE,  CUBEMAPSIZE,
         CUBEMAPSIZE,  CUBEMAPSIZE,  CUBEMAPSIZE,
         CUBEMAPSIZE,  CUBEMAPSIZE,  CUBEMAPSIZE,
         CUBEMAPSIZE,  CUBEMAPSIZE, -CUBEMAPSIZE,
         CUBEMAPSIZE, -CUBEMAPSIZE, -CUBEMAPSIZE,

        -CUBEMAPSIZE, -CUBEMAPSIZE,  CUBEMAPSIZE,
        -CUBEMAPSIZE,  CUBEMAPSIZE,  CUBEMAPSIZE,
         CUBEMAPSIZE,  CUBEMAPSIZE,  CUBEMAPSIZE,
         CUBEMAPSIZE,  CUBEMAPSIZE,  CUBEMAPSIZE,
         CUBEMAPSIZE, -CUBEMAPSIZE,  CUBEMAPSIZE,
        -CUBEMAPSIZE, -CUBEMAPSIZE,  CUBEMAPSIZE,

        -CUBEMAPSIZE,  CUBEMAPSIZE, -CUBEMAPSIZE,
         CUBEMAPSIZE,  CUBEMAPSIZE, -CUBEMAPSIZE,
         CUBEMAPSIZE,  CUBEMAPSIZE,  CUBEMAPSIZE,
         CUBEMAPSIZE,  CUBEMAPSIZE,  CUBEMAPSIZE,
        -CUBEMAPSIZE,  CUBEMAPSIZE,  CUBEMAPSIZE,
        -CUBEMAPSIZE,  CUBEMAPSIZE, -CUBEMAPSIZE,

        -CUBEMAPSIZE, -CUBEMAPSIZE, -CUBEMAPSIZE,
        -CUBEMAPSIZE, -CUBEMAPSIZE,  CUBEMAPSIZE,
         CUBEMAPSIZE, -CUBEMAPSIZE, -CUBEMAPSIZE,
         CUBEMAPSIZE, -CUBEMAPSIZE, -CUBEMAPSIZE,
        -CUBEMAPSIZE, -CUBEMAPSIZE,  CUBEMAPSIZE,
         CUBEMAPSIZE, -CUBEMAPSIZE,  CUBEMAPSIZE
    };

    glGenVertexArrays(1, &VAO);
    glGenBuffers(1, &VBO);
    glBindVertexArray(VAO);
    glBindBuffer(GL_ARRAY_BUFFER, VBO);
    glBufferData(GL_ARRAY_BUFFER, sizeof(skyboxVertices), &skyboxVertices, GL_STATIC_DRAW);
    glEnableVertexAttribArray(0);
    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);
}

SkyBox::SkyBox(CubeMaps& _cubemaps) : cubemap(_cubemaps)
{
}




SkyBox::~SkyBox() 
{
}


